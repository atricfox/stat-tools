// 智能监控库加载
export class SmartMonitoring {
  private static instance: SmartMonitoring;
  private sentryLoaded = false;

  static getInstance(): SmartMonitoring {
    if (!SmartMonitoring.instance) {
      SmartMonitoring.instance = new SmartMonitoring();
    }
    return SmartMonitoring.instance;
  }

  async initializeSentry() {
    // 只在浏览器环境中动态加载 Sentry
    if (typeof window !== 'undefined' && !this.sentryLoaded) {
      try {
        const { init } = await import('@sentry/nextjs');
        init({
          dsn: process.env.NEXT_PUBLIC_SENTRY_DSN,
          enabled: process.env.NODE_ENV === 'production',
          tracesSampleRate: 0.1,
        });
        this.sentryLoaded = true;
      } catch (error) {
        console.warn('Failed to load Sentry:', error);
      }
    }
  }

  captureException(error: Error) {
    if (typeof window !== 'undefined' && this.sentryLoaded) {
      // 动态导入 Sentry 的捕获方法
      import('@sentry/nextjs').then(({ captureException }) => {
        captureException(error);
      });
    } else {
      // 服务端fallback
      console.error('Server Error:', error);
    }
  }
}